stages:
- stage: Test
  jobs:
  - job: Test
    strategy:
      matrix: 
        'Python 3.6/Linux':
          image: 'ubuntu-20.04'
          python_version: '3.6'
          pyenv: 'py36'
        'Python 3.7/Linux':
          image: 'ubuntu-20.04'
          python_version: '3.7'
          pyenv: 'py37'
        'Python 3.8/Linux':
          image: 'ubuntu-20.04'
          python_version: '3.8'
          pyenv: 'py38'
        'Windows Server 2019':
          image: 'windows-2019'
          python_version: '3.8'

    pool:
      vmImage: $(image)

    variables:
      xyenv: $[replace(variables['python_version'], '.', '')]

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python_version)'

    - script: |
        pip install -U poetry
      displayName: 'Install Poetry'

    # - script: make init-dev
    #   displayName: 'Install dependencies'

    # - script: poetry run tox -e ${{replace(variables['python_version'], '.', '')}}
    #   displayName: 'Running tests via tox'

    - script: echo  '$(python_version)'
      displayName: 'Test 1a'

    - script: echo  $(pyenv)
      displayName: 'Test 1b'

    - script: echo $[replace(variables['python_version'], '.', '')]
      displayName: 'Test 2'
